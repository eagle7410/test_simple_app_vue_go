/*
 * Fast api desc
 *
 *  This is a sample server Petstore server.  You can find out more about      Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * API version: 1.0.0
 * Contact: verycooleagle@gamail.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type (
	User struct {
		Id int64 `json:"id,omitempty"`
		Username string `json:"username,omitempty"`
		FirstName string `json:"firstName,omitempty"`
		LastName string `json:"lastName,omitempty"`
		Email string `json:"email"`
		Password string `json:"password"`
		Phone string `json:"phone,omitempty"`
		// User Status
		UserStatus int32 `json:"userStatus,omitempty"`
		IsNew bool

	}
)

func (i *User) LoadByName (name string) error {

	i.Username = name

	row := DB.QueryRow("SELECT Id, FirstName, LastName, Email,Password, Phone, UserStatus FROM users WHERE Username=? LIMIT 1", name)

	return row.Scan(
		&i.Id,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.Password,
		&i.Phone,
		&i.UserStatus,
	)
}

func (i *User) insert () (insertId int64, err error) {

	query, err := DB.Prepare("INSERT INTO users (Username, FirstName, LastName, Email, Password, Phone, UserStatus) VALUES(?, ?, ?, ?, ?, ?, ?)")

	if err != nil {
		return 0, err
	}

	defer query.Close() // Close the statement when leave func to release connection

	result, err := query.Exec(
		&i.Username,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.Password,
		&i.Phone,
		&i.UserStatus,
	) // Insert values

	if err != nil {
		return 0, err
	}

	return result.LastInsertId()
}

func (i *User) Save() (Id int64, err error) {

	if i.IsNew {
		return i.insert()
	}

	// TODO: clear need login update

	return 0, nil
}
